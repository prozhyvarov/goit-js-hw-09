{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,eAAgBH,SAASC,cAAc,oBACvCG,oBAAqBJ,SAASC,cAAc,sBAC5CI,aAAcL,SAASC,cAAc,WAMvC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPV,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOrB,EAAKI,WAAWkB,OAC/BC,EAAOF,OAAOrB,EAAKK,eAAeiB,OAClCE,EAASH,OAAOrB,EAAKM,oBAAoBgB,OAE7CF,GAAgBG,EAChBvB,EAAKC,KAAKwB,QACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAG/BlB,EAFWkB,EAAI,EACfN,GAASG,GAENI,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBZ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('input[name=delay]'),\n  inputDelayStep: document.querySelector('input[name=step]'),\n  inputAmountPromises: document.querySelector('input[name=amount]'),\n  submitButton: document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.inputDelay.value);\n  let step = Number(refs.inputDelayStep.value);\n  let amount = Number(refs.inputAmountPromises.value);\n  let position = 0;\n  delay = delay - step;\n  refs.form.reset();\n  for (let i = 0; i < amount; i += 1) {\n    position = i + 1;\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputDelayStep","inputAmountPromises","submitButton","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","reset","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.27efe29d.js.map"}